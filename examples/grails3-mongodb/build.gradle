group "examples"

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "javax.servlet:javax.servlet-api:$servletApiVersion"
    compile "org.grails:grails-core:$grailsVersion"
    compile "org.grails:grails-dependencies:$grailsVersion", {
        exclude module:'grails-datastore-simple'
    }
    compile "org.grails:grails-web-boot:$grailsVersion"
    compile project(":grails-plugin")
    compile "org.mongodb:mongodb-driver-sync:$mongodbDriverVersion"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    runtime "com.h2database:h2"
    runtime "org.grails.plugins:scaffolding:$scaffolingVersion"
    runtime "org.grails.plugins:fields:$fieldsVersion"

    testCompile "org.grails:grails-gorm-testing-support:$testingSupportVersion"
    testCompile "org.grails:grails-web-testing-support:$testingSupportVersion"
    testCompile "de.bwaldvogel:mongo-java-server:$mongoJavaServerVersion"
    testCompile "io.netty:netty-transport:4.1.49.Final"
    testCompile "io.netty:netty-codec:4.1.49.Final"
    testCompile "io.netty:netty-handler:4.1.49.Final"

    testCompile("org.grails.plugins:geb") {
        exclude group: 'org.gebish', module: 'geb-spock'
    }
    testCompile "org.gebish:geb-spock:$gebVersion"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}

webdriverBinaries {
    chromedriver "$chromeDriverVersion"
    geckodriver "$geckodriverVersion"
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}




